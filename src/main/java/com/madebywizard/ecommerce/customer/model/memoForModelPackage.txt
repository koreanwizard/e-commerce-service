Address:
an object that contains every information of an address (address will be associated to a single customer)
will not allow sharing addresses temporarily

* street_address: name of the street address
* unitNumber: a unit number (can be the number of office or apartment)
* city: name of the city
* state: name of the state (province or district -> this is an optional attribute: nullable)
* postal_code: a postal code (it's a String because some country's postal code includes a hyphen or starts from 0)
* country: the country name (will be an upper-case string)
* customerId: a customer's id (numerical id) (this is required for a 'OneToMany' relational mapping process)


Cart:
an object that contains the number of item.

* itemCount: a number of items that are stored in the cart

*** In the future, the 'Cart' object will contain a list of 'Item' objects.


Customer:
an object that contains customer's information.

* firstName: customer's first name
* lastName: customer's last name
* gender: customer's gender
* email: customer's email (email validator will be added in the future)
* cart: customer's cart
        customer and cart have 'OneToOne' relationship because both of them can be associated with one cart (or customer)
* addresses: every address that customer registered (a list of 'Address' object)
             customer and address have 'OneToMany' relationship because customer can store multiple addresses
             and each address are associated to a one customer.

-> CascadeType.ALL: this applies all operations (insert, update, delete, refresh, detach) to child entities.
                    when parent entities are updated, the child entities will also follow the operation




CustomerDTO:
a data transfer object for 'Customer' object. this will only contain certain information of customer

* id: an integer id of a certain customer
* lastName: customer's last name
* cart: customer's cart
* addresses: customer's addresses that are registered
